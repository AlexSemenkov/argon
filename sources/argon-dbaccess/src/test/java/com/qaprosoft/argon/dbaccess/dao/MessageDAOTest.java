package com.qaprosoft.argon.dbaccess.dao;

import com.qaprosoft.argon.dbaccess.dao.mysql.*;
import com.qaprosoft.argon.dbaccess.utils.KeyGenerator;
import com.qaprosoft.argon.models.db.*;
import org.joda.time.DateTime;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.testng.AbstractTestNGSpringContextTests;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;
import static org.testng.Assert.assertNotEquals;
import static org.testng.Assert.assertNull;

/**
 * @author kbugrim
 * @since 10 Dec 2017
 */
@Test
@ContextConfiguration("classpath:com/qaprosoft/argon/dbaccess/dbaccess-test.xml")
public class MessageDAOTest extends AbstractTestNGSpringContextTests {

    private static final boolean ENABLED = false;

    @Autowired
    private MessageDAO messageDAO;

    @Autowired
    private UserDAO userDAO;

    @Autowired
    private ChatDAO chatDAO;

    @Autowired
    private StatusDAO statusDAO;


    private static final Message MESSAGE = new Message();
    {
        MESSAGE.setAttachment(Message.Attachment.SOUND);
        MESSAGE.setRead(true);
        MESSAGE.setChat(CHAT);
        MESSAGE.setUser(USER);
        MESSAGE.setBody("body" + KeyGenerator.getKey());
    }

    private static final Chat CHAT = new Chat();
    {
        CHAT.setName("chat" + KeyGenerator.getKey());
    }

    private static final Status STATUS = new Status();
    {
        STATUS.setStatusType(Status.StatusType.TEST_OFLINE);
    }

    private final static User USER = new User();
    {
        USER.setEmail(KeyGenerator.getKey() + "@test-mail.com");
        USER.setEnabled(true);
        USER.setFirstName("Boris");
        USER.setLastName("The Blade");
        USER.setPassword("pass" + KeyGenerator.getKey().toString());
        USER.setDob(DateTime.now().withTime(0, 0, 0, 0).minusYears(18).toDate());
        USER.setUsername("user" + KeyGenerator.getKey());
        USER.setVerified(true);
        USER.setStatus(STATUS);
    }

    @BeforeClass
    public void init(){
        statusDAO.createStatus(STATUS);
        chatDAO.createChat(CHAT);
        userDAO.createUser(USER);
    }

    @AfterClass
    public void delete(){
        userDAO.deleteUserById(USER.getId());
        chatDAO.deleteChatById(CHAT.getId());
        statusDAO.deleteStatusById(CHAT.getId());
    }

    @Test(enabled = ENABLED)
    public void createMessage()
    {

        for (int i = 0; i <10000 ; i++) {
            System.out.println(MESSAGE.getUser().getId());
        }
        messageDAO.createMessage(MESSAGE);
        assertNotEquals(MESSAGE.getId(), 0, "Message ID must be set up by autogenerated keys.");
    }

    @Test(enabled = ENABLED, dependsOnMethods =
            { "createMessage"})
    public void deleteMessageById()
    {
        messageDAO.deleteMessageById(MESSAGE.getId());
        assertNull(messageDAO.getMessageById(MESSAGE.getId()));
    }
}
