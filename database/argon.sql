-- MySQL Script generated by MySQL Workbench
-- Mon Dec 11 10:14:20 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema argon
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `argon` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `argon` ;

-- -----------------------------------------------------
-- Table `argon`.`STATUSES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`STATUSES` ;

CREATE TABLE IF NOT EXISTS `argon`.`STATUSES` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `STATUS` VARCHAR(50) NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `STATUS_UNIQUE` (`STATUS` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`USERS` ;

CREATE TABLE IF NOT EXISTS `argon`.`USERS` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(50) NOT NULL,
  `PASSWORD` VARCHAR(100) NOT NULL,
  `FIRST_NAME` VARCHAR(50) NULL,
  `LAST_NAME` VARCHAR(50) NULL,
  `EMAIL` VARCHAR(100) NOT NULL,
  `ENABLED` TINYINT(1) NOT NULL DEFAULT 0,
  `VERIFIED` TINYINT(1) NOT NULL DEFAULT 0,
  `STATUS_ID` INT UNSIGNED NOT NULL,
  `DOB` DATE NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `USERNAME_UNIQUE` (`USERNAME` ASC),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC),
  INDEX `fk_USERS_STATUSES1_idx` (`STATUS_ID` ASC),
  CONSTRAINT `fk_USERS_STATUSES1`
    FOREIGN KEY (`STATUS_ID`)
    REFERENCES `argon`.`STATUSES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`AUTHORITIES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`AUTHORITIES` ;

CREATE TABLE IF NOT EXISTS `argon`.`AUTHORITIES` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `AUTHORITY` VARCHAR(50) NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `AUTHORITY_UNIQUE` (`AUTHORITY` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`USER_AUTHORITIES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`USER_AUTHORITIES` ;

CREATE TABLE IF NOT EXISTS `argon`.`USER_AUTHORITIES` (
  `USER_ID` INT UNSIGNED NOT NULL,
  `AUTHORITY_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`USER_ID`, `AUTHORITY_ID`),
  INDEX `fk_USERS_has_AUTHORITIES_AUTHORITIES1_idx` (`AUTHORITY_ID` ASC),
  INDEX `fk_USERS_has_AUTHORITIES_USERS_idx` (`USER_ID` ASC),
  CONSTRAINT `fk_USERS_has_AUTHORITIES_USERS`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USERS_has_AUTHORITIES_AUTHORITIES1`
    FOREIGN KEY (`AUTHORITY_ID`)
    REFERENCES `argon`.`AUTHORITIES` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`VERIFICATION_LINKS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`VERIFICATION_LINKS` ;

CREATE TABLE IF NOT EXISTS `argon`.`VERIFICATION_LINKS` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `L` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`CONFIRMATIONS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`CONFIRMATIONS` ;

CREATE TABLE IF NOT EXISTS `argon`.`CONFIRMATIONS` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `LINK` VARCHAR(100) NOT NULL,
  `ATTEMPTS` INT NOT NULL DEFAULT 3,
  `USER_ID` INT UNSIGNED NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `LINK_UNIQUE` (`LINK` ASC),
  INDEX `fk_CONFIRMATIONS_USERS1_idx` (`USER_ID` ASC),
  CONSTRAINT `fk_CONFIRMATIONS_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`CHATS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`CHATS` ;

CREATE TABLE IF NOT EXISTS `argon`.`CHATS` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(255) NOT NULL,
  `PRIVATE` TINYINT(1) NOT NULL DEFAULT 0,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`MESSAGES`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`MESSAGES` ;

CREATE TABLE IF NOT EXISTS `argon`.`MESSAGES` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `BODY` TEXT NOT NULL,
  `ATTACHMENT` BLOB NULL,
  `USER_ID` INT UNSIGNED NOT NULL,
  `CHAT_ID` INT UNSIGNED NOT NULL,
  `READ` TINYINT(1) NULL DEFAULT 0,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  INDEX `fk_MESSAGES_USERS1_idx` (`USER_ID` ASC),
  INDEX `fk_MESSAGES_CHATS1_idx` (`CHAT_ID` ASC),
  CONSTRAINT `fk_MESSAGES_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MESSAGES_CHATS1`
    FOREIGN KEY (`CHAT_ID`)
    REFERENCES `argon`.`CHATS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`CHAT_USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`CHAT_USERS` ;

CREATE TABLE IF NOT EXISTS `argon`.`CHAT_USERS` (
  `CHATS_ID` INT UNSIGNED NOT NULL,
  `USERS_ID` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`CHATS_ID`, `USERS_ID`),
  INDEX `fk_CHATS_has_USERS_USERS1_idx` (`USERS_ID` ASC),
  INDEX `fk_CHATS_has_USERS_CHATS1_idx` (`CHATS_ID` ASC),
  CONSTRAINT `fk_CHATS_has_USERS_CHATS1`
    FOREIGN KEY (`CHATS_ID`)
    REFERENCES `argon`.`CHATS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CHATS_has_USERS_USERS1`
    FOREIGN KEY (`USERS_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`SETTINGS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`SETTINGS` ;

CREATE TABLE IF NOT EXISTS `argon`.`SETTINGS` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `SOUND_ENABLED` TINYINT(1) NOT NULL DEFAULT 1,
  `NEWS_ENABLED` TINYINT(1) NOT NULL DEFAULT 1,
  `USER_ID` INT UNSIGNED NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  INDEX `fk_SETTINGS_USERS1_idx` (`USER_ID` ASC),
  CONSTRAINT `fk_SETTINGS_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `argon`.`BLACKLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `argon`.`BLACKLIST` ;

CREATE TABLE IF NOT EXISTS `argon`.`BLACKLIST` (
  `ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `USER_ID` INT UNSIGNED NOT NULL,
  `CHAT_ID` INT UNSIGNED NOT NULL,
  `CREATED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `MODIFIED_AT` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  INDEX `fk_BLACKLIST_USERS1_idx` (`USER_ID` ASC),
  INDEX `fk_BLACKLIST_CHATS1_idx` (`CHAT_ID` ASC),
  CONSTRAINT `fk_BLACKLIST_USERS1`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `argon`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_BLACKLIST_CHATS1`
    FOREIGN KEY (`CHAT_ID`)
    REFERENCES `argon`.`CHATS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
